name: Build and Publish Android App

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Type of version increment (major, minor, patch)'
        required: false
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to get all tags

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Retrieve the secret and decode it to a file
        env:
          KEYFILE_BASE64: ${{ secrets.KEYFILE_BASE64 }}
        run: |
          echo "$KEYFILE_BASE64" | base64 --decode > keystore.jks

      - name: Get latest git tag and increment version
        id: get_version
        run: |
          git fetch --tags
          # Get the latest tag across all branches
          LAST_TAG=$(git tag --list --sort=-v:refname 'v*' | head -n1)
          if [ -z "$LAST_TAG" ]; then
            LAST_TAG="v0.0.0"
          fi
          echo "Last tag: $LAST_TAG"

          # Remove the 'v' prefix if present
          VERSION=${LAST_TAG#v}

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          BUMP_TYPE="${{ github.event.inputs.version_bump_type }}"

          # Default values if any component is missing
          MAJOR=${MAJOR:-0}
          MINOR=${MINOR:-0}
          PATCH=${PATCH:-0}

          if [ "$BUMP_TYPE" = "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$BUMP_TYPE" = "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          NEW_TAG="v$NEW_VERSION"

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

          # Calculate version code
          # Get the highest version code used so far and increment it
          LAST_VERSION_CODE=$(git tag -l --format='%(refname:strip=2) %(contents:lines=1)' 'v*' | awk '{print $2}' | sort -nr | head -n1)
          LAST_VERSION_CODE=${LAST_VERSION_CODE:-0}
          NEW_VERSION_CODE=$((LAST_VERSION_CODE + 1))
          echo "NEW_VERSION_CODE=$NEW_VERSION_CODE" >> $GITHUB_ENV

          echo "New version: $NEW_VERSION"
          echo "New tag: $NEW_TAG"
          echo "New version code: $NEW_VERSION_CODE"

      - name: Create and push new git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Annotate the tag with the version code
          git tag -a "$NEW_TAG" -m "$NEW_VERSION_CODE"
          git push origin "$NEW_TAG"

      - name: Build Release Android app
        env:
          KEYFILE: ${{ github.workspace }}/keystore.jks
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          VERSION_CODE: ${{ env.NEW_VERSION_CODE }}
          VERSION_NAME: ${{ env.NEW_VERSION }}
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'
        run: |
          ./gradlew clean bundleRelease \
            -Pandroid.injected.signing.store.file="$KEYFILE" \
            -Pandroid.injected.signing.store.password="$STORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$KEY_PASSWORD"

      - name: Generate Google Play credentials
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - name: Publish app to Play Store
        # https://github.com/r0adkll/upload-google-play/releases/tag/v1.1.3
        uses: r0adkll/upload-google-play@935ef9c68bb393a8e6116b1575626a7f5be3a7fb
        with:
          serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
          packageName: dev.sal.timekeeper
          releaseFiles: ${{ github.workspace }}/build/outputs/bundle/release/TimeKeeper-release.aab

      - name: Upload the AAB
        uses: actions/upload-artifact@v4
        with:
          name: TimeKeeper-release-${{ env.NEW_VERSION }}.aab
          path: ${{ github.workspace }}/build/outputs/bundle/release/TimeKeeper-release.aab